type Student {
  id: ObjID!
  name: String!
  courses(lastCreatedAt: Float, limit: Int): [Course]
  tests(lastCreatedAt: Float, limit: Int): [Test]
  courseInvitations(lastCreatedAt: Float, limit: Int): [CourseInvitation]
  user: User!
  parent: Parent
  createdAt: Float!
  updatedAt: Float!
}

extend type Query {
  students(lastCreatedAt: Float, limit: Int): [Student!]
  student(id: ObjID): Student
}

input CreateStudentInput {
  name: String
  parentId: ObjID
  user: CreateUserInput!
}

input CreateAccountForStudentInput {
  name: String!
  courseId: String!
  user: CreateUserInput!
}

input UpdateStudentInput {
  name: String
  parentId: ObjID
  user: UpdateUserInput
}

extend type Mutation {
  createStudent(input: CreateStudentInput!): Student
  createAccountForStudent(input: CreateAccountForStudentInput!): Student
  updateStudent(id: ObjID!, input: UpdateStudentInput!): Student
  removeStudent(id: ObjID!): Boolean
  removeStudentFromCourse(studentId: ObjID!, courseId: ObjID!): Boolean
}
